  /role/{roleId}:
    put:
      tags:
      - Role
      summary: Update an existing role
      operationId: updateRole
      parameters:
      - name: roleId
        in: path
        description: ID of role to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequestBody'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
        "405":
          description: Validation exception
    get:
      tags:
      - Role
      summary: Find role by ID
      description: Returns a single product
      operationId: getRoleById
      parameters:
      - name: roleId
        in: path
        description: ID of role to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        "400":
          description: Invalid ID supplied
        "404":
          description: Role not found
    delete:
      tags:
      - Role
      summary: Deletes a role
      operationId: deleteRole
      parameters:
      - name: roleId
        in: path
        description: Role id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Role not found

  /role:
    post:
      tags:
      - Role
      summary: Create new roles
      operationId: CreateRoles
      parameters:
        - name: roles
          in: query
          description: Roles name to create
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "405":
          description: Invalid input
